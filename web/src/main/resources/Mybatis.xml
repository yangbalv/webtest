<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- mybatis核心配置，用于配置相关数据源以及连接池等信息，以及实体类的别称映射，插件配置等等 -->
<configuration>
    <!-- 指定实体类的别名，方便在mapper配置中进行引用 -->
    <typeAliases>
        <!-- 方法1、定义一个alias别名，缺点在于需要一个实体类分别指定-->
<!--        <typeAlias type="com.entity.Users" alias="users"/>-->
<!--        <typeAlias type="com.entity.User" alias="user"/>-->
        <!-- 方法2、也可以使用package来给某个包下面的所有实体类自动创建别名，

        自动创建的别名规则是类的类名并将首字母改为小写 -->
        <package name="com.entity"/>
    </typeAliases>
    <!-- 配置数据源环境，default指定默认的数据源 -->
    <environments default="mysql">
        <!-- 创建一个MySQL的数据源环境，id就叫mysql -->
        <environment id="mysql">
            <!-- 配置事务管理，这里有JDBC和MANAGED两个值
             JDBC：使用本地jdbc的事务
             MANAGED：mybatis不参与事务管理，由运行容器来管理事务-->
            <transactionManager type="JDBC"/>
            <!-- 配置数据源，type指定获取连接的方式，有以下几个值：
             POOLED：使用mybatis自带的数据库连接池（方便连接的复用）
             UNPOOLRF：不使用连接池，而是每次请求都从数据库去获取连接
              JMDI：通过查找JNDI树去获取数据源对象，通常结合web容器或者EJB容器来配置 -->
            <dataSource type="POOLED">
                <!-- 配置数据源信息，驱动，url，连接的账号密码等 -->
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/tuser?useUnicode=true&amp;useSSL=false"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 指定mapper配置文件 -->
    <mappers>
        <!--        文件名称无关紧要 主要的是文件里面定义的namespace-->
        <mapper resource="mapper/UsersMapper.xml"/>
    </mappers>
</configuration>